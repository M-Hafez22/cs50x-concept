{"version":3,"sources":["components/Header.js","components/Footer.js","Home.js","components/LectureVideo.js","components/LectureFiles.js","components/Shorts.js","components/WeekContent.js","Week.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","to","href","class","Footer","lists","Object","keys","footerData","map","key","i","name","link","Home","document","title","WeeksList","weeks","index","LectureVideo","youtube_video","src","frameborder","allow","allowfullscreen","LectureFiles","weekNumber","week","demos","Demo","demosList","youtube","video","ThreeD","twoD","slides","google_slides","cs50_player","Shorts","shorts","shortsList","WeekContent","finalWeek","length","console","log","Week","number","useParams","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.156be4d8.chunk.js","sourcesContent":["import React from 'react'\nimport { FaFacebook } from 'react-icons/fa'\nimport { FaGithub } from 'react-icons/fa'\nimport {FaInstagram} from 'react-icons/fa'\nimport {FaLinkedin} from 'react-icons/fa'\nimport {FaQuora} from 'react-icons/fa'\nimport {FaReddit} from 'react-icons/fa'\nimport {FaTwitter} from 'react-icons/fa'\nimport {Link} from 'react-router-dom'\n\nfunction Header() {\n    return (\n        <header className=\"page-header\">\n            <div>\n                {/* <h1>This is CS50x</h1> */}\n                <Link to='/' className='home-link'>This is CS50x</Link>\n                <span>OpenCourseWare</span>\n            </div>\n            <div className=\"auther\">\n                <h3><a href=\"https://cs.harvard.edu/malan/\">David J. Malan</a></h3>\n                <h3><a href=\"malan@harvard.edu\">malan@harvard.edu</a></h3>\n                \n                <div class=\"socialLinks\">\n                    <a href=\"https://www.facebook.com/dmalan\"><FaFacebook /></a>\n                    <a href=\"https://github.com/dmalan\"><FaGithub /></a>\n                    <a href=\"https://www.instagram.com/davidjmalan/\"><FaInstagram/></a>\n                    <a href=\"https://www.linkedin.com/in/malan/\"><FaLinkedin /></a>\n                    <a href=\"https://www.quora.com/profile/David-J-Malan\"><FaQuora /></a>\n                    <a href=\"https://www.reddit.com/user/davidjmalan\"><FaReddit /></a>\n                    <a href=\"https://twitter.com/davidjmalan\"><FaTwitter /></a>\n                </div>\n            </div>\n        </header>\n    )\n}\n\nexport default Header","import React from 'react'\nimport footerData from '../data/footerLinks'\n\nfunction Footer() {\n    // Loop through Lists\n    const lists = Object.keys(footerData).map(key => (\n        <ul key={key} className=\"footerGroup\">\n            {   \n                //Loop inside every list       \n                (footerData[key].map(i => (\n                    <li><a key={i.name} href={i.link}>{i.name}</a></li>\n                )))\n            }\n\n        </ul>\n    ))\n\n    return (\n        <footer>\n            {lists}\n        </footer>\n    )\n}\n\nexport default Footer\n","import React from 'react'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport {Link} from 'react-router-dom';\nimport weeks from './data/weeks.json'\n\n\n\nfunction Home() {\n    document.title = \"CS50x\";\n\n    const WeeksList = Object.keys(weeks).map((key, index )=> (\n            <Link to={`/week/${index}`} >{weeks[index].name}</Link>\n    ))\n    return (\n        <div className=\"home\">\n            <div className=\"main\">\n                <Header />\n                <ul className=\"weeks-list\">\n                    {WeeksList}\n                </ul>\n            </div>\n            <Footer />\n        </div>\n    )\n}\n\nexport default Home\n","import React from 'react'\n\nfunction LectureVideo({youtube_video}) {\n    return (\n        <div className='lecture-video'>\n            <iframe\n                src={youtube_video}\n                frameborder=\"0\" \n                allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" \n                allowfullscreen>\n            </iframe>\n        </div>\n    )\n}\n\nexport default LectureVideo\n","import React from \"react\";\nimport weeks from \"../data/weeks\";\n\nfunction LectureFiles({ weekNumber }) {\n    // Selected Week\n    const week = weeks[weekNumber];\n\n    // Display Demos if exist\n    const demos = weeks[weekNumber].Demo;\n    const demosList = demos && (\n        <div className=\"filesGroup\">\n            <h2>Demos</h2>\n            <ul>\n                {Object.keys(demos).map((key) => (\n                    <li><a href={demos[key]}>{key} </a></li>\n                ))}\n            </ul>\n        </div>\n    );\n\n    // Display youtube download links\n    const youtube = week.video.youtube.ThreeD ? \n        (\n            <div>\n                <h3>Youtube</h3>\n                <ul>\n                    <li><a href={week.video.youtube.twoD}>2D</a></li>\n                    <li><a href={week.video.youtube.ThreeD}>3D</a></li>\n                </ul>\n            </div>\n        ) \n    : \n        (\n            <li><a href={week.video.youtube.twoD}>Youtube</a></li>\n        );\n\n    return (\n        <div className=\"week-files\">\n            <div className=\"files\">\n\n                <div className=\"filesGroup\">\n                    <h2>Lecture</h2>\n                    <li><a href={`https://cdn.cs50.net/2019/fall/lectures/${weekNumber}/lecture${weekNumber}.mp3.download`}>Audio</a></li>\n                    <li><a href={`https://cs50.harvard.edu/x/2020/notes/${weekNumber}/`}>Notes</a></li>\n                </div>\n                {demosList && demosList}\n\n                <div className=\"filesGroup\">\n                    <h2>Slides</h2>\n                    <ul>\n                        <li><a href={week.slides.google_slides}>Google Slide</a></li>\n                        <li><a href={`https://cdn.cs50.net/2019/fall/lectures/${weekNumber}/lecture${weekNumber}.pdf`}>PDF</a></li>\n                    </ul>\n                </div>\n\n                <div className=\"filesGroup\">\n                    <h2>Source Code</h2>\n                    <ul>\n                        <li><a href={`https://cdn.cs50.net/2019/fall/lectures/${weekNumber}/src${weekNumber}/`}>Index</a></li>\n                        <li><a href={`https://cdn.cs50.net/2019/fall/lectures/${weekNumber}/src${weekNumber}.pdf`}>PDF</a></li>\n                        <li><a href={`https://cdn.cs50.net/2019/fall/lectures/${weekNumber}/src${weekNumber}.zip`} > Zip</a></li>\n                    </ul>\n                </div>\n\n                <div className=\"filesGroup\">\n                    <h2>Video</h2>\n                    <ul>\n                        <li><a href={week.video.cs50_player}>CS50 Video player</a></li>\n                        {youtube}\n                        <div>\n                            <h3>MP4</h3>\n                            <ul>\n                                <li><a href={`https://cdn.cs50.net/2019/fall/lectures/${weekNumber}/lecture${weekNumber}-360p.mp4.download`}> 360p</a></li>\n                                <li><a href={`https://cdn.cs50.net/2019/fall/lectures/${weekNumber}/lecture${weekNumber}-720p.mp4.download`}>720p</a></li>\n                                <li><a href={`https://cdn.cs50.net/2019/fall/lectures/${weekNumber}/lecture${weekNumber}-1080p.mp4.download`}>1080p</a></li>\n                                <li><a href={`https://cdn.cs50.net/2019/fall/lectures/${weekNumber}/lecture${weekNumber}-4k.mp4.download`}>4K</a></li>\n                            </ul>\n                        </div>\n                        \n                    </ul>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default LectureFiles;\n","import React from 'react'\nimport weeks from \"../data/weeks\"\n\nfunction Shorts({ weekNumber }) {\n\n\n    const shorts = weeks[weekNumber].shorts;\n    const shortsList = shorts && \n    (\n            <ul className=\"shorts-list\">\n                {Object.keys(shorts).map((key) => (\n                    <li><a href={shorts[key]}>{key}</a></li>\n                ))}\n            </ul>   \n    );\n    return (\n        <div className=\"shorts\">\n            <h2>Shorts</h2>\n            {shortsList}\n        </div>\n    )\n}\n\nexport default Shorts\n","import React from 'react'\nimport weeks from '../data/weeks'\nimport LectureVideo from './LectureVideo'\nimport LectureFiles from './LectureFiles'\nimport Shorts from './Shorts'\n\nfunction WeekContent({weekNumber}) {\n    //Selected Week\n    const week = weeks[weekNumber];\n    const finalWeek = (Object.keys(weeks).length) - 1 == weekNumber ;\n    console.log(weekNumber)\n    return (\n        <div className=\"week-content\">\n            <header>\n                <h1>Week {weekNumber} - <span>{week.name}</span></h1>\n            </header>\n            \n            <LectureVideo youtube_video = {week.youtube_video}/>\n\n            <LectureFiles weekNumber ={weekNumber} />\n\n            {  weeks[weekNumber].shorts && <Shorts weekNumber ={weekNumber}/>}\n\n\n            <div>\n                <a \n                    href={`https://cs50.harvard.edu/x/2020/psets/${weekNumber}/`}\n                    className='week-content-header'\n                    >\n                    Problem <span>Set {weekNumber} { finalWeek && \" (Choose your Track)\"}</span>\n                </a>\n            </div>\n        </div>\n    )\n}\n\nexport default WeekContent\n","import React from 'react'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport WeekContent from './components/WeekContent'\nimport { useParams } from 'react-router'\n\nfunction Week() {\n    const {number} = useParams();\n    document.title = `Week ${number} - CS50x`;\n    return (\n        <div>\n            <Header />\n            <WeekContent weekNumber = {number} /> \n            <Footer />\n        </div>\n    )\n}\n\nexport default Week\n","import React from 'react';\nimport {HashRouter as Router, Switch, Route}from 'react-router-dom'\nimport Home from './Home'\nimport Week from './Week'\nimport './style/main.scss'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route exact path='/' component={Home} />\n          <Route path='/week/:number' component={Week}/> \n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}